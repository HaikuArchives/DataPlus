/* ------------------------------------------------------------------ 

	Title: DataPlus

	Description:  An application for graphical analysis of scientific
		data. This class is simply a place-holder for the app's data.

	Author :
		Stephen Wardlaw, M.D.
		Medical Research & Development
		Highrock
		Lyme, CT 06371

	Edit History:	
		20 September, 1999
			Much rearranging
		14 August, 1999
			Created
		
------------------------------------------------------------------ */
#include "DataPlus.h"
#include "DPGlobals.h"

#include <AppKit.h>
#include "WU_AppUtils.h"

const unsigned char largeIcon_bits [] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x1d,0x1d,0x1c,0x1b,0x1b,0x1b,0x1a,0x1a,0x19,0x18,0x18,0x17,0x16,0x16,0x16,
	0x15,0x15,0x14,0x13,0x13,0x00,0x2a,0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,
	0x00,0x1d,0x17,0x17,0x16,0x16,0x16,0x16,0x16,0x15,0x15,0x15,0x14,0x14,0x14,0x2a,
	0x2a,0x12,0x12,0x12,0x12,0x00,0x2a,0x2a,0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,
	0x00,0x1c,0x16,0x16,0x16,0x16,0x16,0x15,0x15,0x15,0x14,0x14,0x13,0x13,0x5b,0x5a,
	0x7b,0x9c,0x12,0x12,0x12,0x00,0x2a,0x2a,0x2a,0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,
	0x00,0x1b,0x16,0x16,0x16,0x15,0x15,0x15,0x14,0x14,0x13,0x13,0x13,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x11,0x11,0x00,0x2a,0x2a,0x2a,0x2a,0x00,0x3f,0x3f,0x3f,0x3f,0x00,
	0x00,0x1b,0x16,0x15,0x15,0x14,0x14,0x14,0x13,0x13,0x13,0x12,0x12,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x10,0x10,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x00,0x3f,0x3f,0x3f,0x00,
	0x00,0x1b,0x15,0x14,0x14,0x14,0x13,0x13,0x13,0x12,0x12,0x12,0x12,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x10,0x0f,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x00,0x3f,0x3f,0x00,
	0x00,0x1a,0x14,0x14,0x13,0x13,0x12,0x12,0x12,0x12,0x12,0x12,0x11,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x0f,0x0e,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x00,0x3f,0x00,
	0x00,0x1a,0x13,0x13,0x12,0x12,0x12,0x12,0x12,0x12,0x11,0x11,0x11,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x0e,0x0e,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x00,0x00,
	0x00,0x19,0x12,0x12,0x12,0x12,0x12,0x12,0x11,0x11,0x10,0x10,0x10,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x0d,0x0d,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x00,
	0x00,0x18,0x12,0x12,0x12,0x11,0x11,0x11,0x10,0x10,0x10,0x0f,0x0f,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x0d,0x0d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x18,0x12,0x11,0x11,0x11,0x10,0x10,0x10,0x0f,0x0f,0x0f,0x0e,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x0d,0x0c,0x0c,0x0c,0x0b,0x0b,0x0a,0x0a,0x0a,0x09,0x09,0x08,0x00,
	0x00,0x17,0x11,0x11,0x10,0x10,0x10,0x0f,0x0f,0x0e,0x0e,0x0e,0x0d,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x0c,0x0b,0x0b,0x0b,0x0a,0x0a,0x0a,0x09,0x09,0x09,0x09,0x07,0x00,
	0x00,0x16,0x10,0x10,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x09,0x08,0x07,0x00,
	0x00,0x16,0x0f,0x7b,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xda,
	0x5b,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0xd9,0x7c,0x08,0x06,0x00,
	0x00,0x16,0x0f,0x5b,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,
	0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0x7b,0x07,0x05,0x00,
	0x00,0x15,0x0e,0x7c,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0xda,
	0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x7c,0x06,0x05,0x00,
	0x00,0x15,0x0d,0x9d,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x5a,0xda,
	0x5b,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x2a,0x05,0x04,0x00,
	0x00,0x14,0x0d,0x0d,0x0d,0x0c,0x0c,0x0b,0x0b,0x0b,0x0a,0x0a,0x0a,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x08,0x08,0x07,0x07,0x07,0x06,0x06,0x06,0x05,0x05,0x04,0x04,0x00,
	0x00,0x13,0x0c,0x0c,0x0c,0x0b,0x0b,0x0b,0x0a,0x0a,0x0a,0x09,0x09,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x07,0x07,0x07,0x06,0x06,0x06,0x05,0x05,0x04,0x04,0x04,0x04,0x00,
	0x00,0x13,0x0c,0x0b,0x0b,0x0b,0x0a,0x0a,0x0a,0x09,0x09,0x09,0x09,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x07,0x06,0x06,0x05,0x05,0x05,0x04,0x04,0x04,0x04,0x04,0x03,0x00,
	0x00,0x12,0x0b,0x0b,0x0a,0x0a,0x09,0x09,0x09,0x09,0x09,0x09,0x08,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x06,0x05,0x05,0x05,0x04,0x04,0x04,0x04,0x04,0x03,0x03,0x02,0x00,
	0x00,0x12,0x0a,0x0a,0x09,0x09,0x09,0x09,0x09,0x09,0x08,0x08,0x07,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x05,0x05,0x04,0x04,0x04,0x04,0x04,0x03,0x03,0x03,0x02,0x02,0x00,
	0x00,0x12,0x09,0x09,0x09,0x09,0x09,0x09,0x08,0x08,0x07,0x07,0x07,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x04,0x04,0x04,0x04,0x04,0x03,0x03,0x03,0x02,0x02,0x02,0x01,0x00,
	0x00,0x11,0x09,0x09,0x09,0x08,0x08,0x08,0x07,0x07,0x07,0x06,0x06,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x04,0x04,0x04,0x03,0x03,0x03,0x02,0x02,0x01,0x01,0x01,0x00,0x00,
	0x00,0x10,0x09,0x08,0x08,0x08,0x07,0x07,0x07,0x06,0x06,0x05,0x05,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x04,0x03,0x03,0x02,0x02,0x02,0x01,0x01,0x01,0x00,0x00,0x00,0x00,
	0x00,0x10,0x08,0x08,0x07,0x07,0x07,0x06,0x06,0x05,0x05,0x05,0x04,0x2a,0x5a,0xda,
	0x5b,0x9c,0x2a,0x03,0x02,0x02,0x02,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x0f,0x07,0x07,0x06,0x06,0x06,0x05,0x05,0x05,0x04,0x04,0x04,0x2a,0x1e,0x1e,
	0x5a,0x9c,0x2a,0x02,0x02,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x0e,0x06,0x06,0x06,0x05,0x05,0x05,0x04,0x04,0x04,0x04,0x04,0x03,0x9c,0x7c,
	0x9c,0x2a,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x0e,0x06,0x05,0x05,0x05,0x04,0x04,0x04,0x04,0x04,0x03,0x03,0x03,0x02,0x02,
	0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x0d,0x0d,0x0d,0x0c,0x0b,0x0b,0x0a,0x09,0x09,0x09,0x08,0x07,0x07,0x06,0x05,
	0x05,0x04,0x04,0x04,0x03,0x02,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

const unsigned char smallIcon_bits [] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x16,0x16,0x15,0x15,0x14,0x13,0x5a,0x9c,0x12,0x00,0x2a,0x00,0x3f,0x3f,0x00,
	0x00,0x15,0x14,0x14,0x13,0x12,0x2a,0xda,0x9c,0x10,0x00,0x2a,0x2a,0x00,0x3f,0x00,
	0x00,0x14,0x13,0x12,0x12,0x12,0x2a,0xda,0x9c,0x0f,0x00,0x2a,0x2a,0x2a,0x00,0x00,
	0x00,0x12,0x12,0x12,0x11,0x10,0x2a,0xda,0x9c,0x0d,0x00,0x2a,0x2a,0x2a,0x2a,0x00,
	0x00,0x11,0x11,0x10,0x0f,0x0f,0x2a,0xda,0x9c,0x0d,0x0c,0x0b,0x0a,0x0a,0x09,0x00,
	0x00,0x10,0x2a,0x2a,0x2a,0x2a,0x2a,0xda,0x9c,0x2a,0x2a,0x2a,0x2a,0x2a,0x08,0x00,
	0x00,0x5b,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0xda,0x07,0x00,
	0x00,0x9d,0x9c,0x9c,0x9c,0x9c,0x9c,0xda,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x05,0x00,
	0x00,0x0c,0x0b,0x0b,0x0a,0x09,0x2a,0xda,0x9c,0x07,0x07,0x06,0x05,0x04,0x04,0x00,
	0x00,0x0b,0x0a,0x09,0x09,0x09,0x2a,0xda,0x9c,0x06,0x05,0x04,0x04,0x04,0x03,0x00,
	0x00,0x09,0x09,0x09,0x08,0x07,0x2a,0xda,0x9c,0x04,0x04,0x04,0x03,0x02,0x02,0x00,
	0x00,0x08,0x08,0x07,0x06,0x05,0x2a,0xda,0x9c,0x04,0x03,0x02,0x01,0x01,0x00,0x00,
	0x00,0x07,0x06,0x05,0x05,0x04,0x2a,0x1e,0x9c,0x02,0x01,0x01,0x00,0x00,0x00,0x00,
	0x00,0x05,0x05,0x04,0x04,0x03,0x03,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

// -------------------------------------------------------------------
//	* MAIN Program
// -------------------------------------------------------------------
int
main()
{
	try {
		DataPlus theApp;

		theApp.Run();
	}
	
	catch(const char* theMesg) {
		BAlert* theAlert = new BAlert("err",theMesg,"OK");
		theAlert->Go();
	}
		

	return(0);
}
// -------------------------------------------------------------------
//	* CONSTRUCTORS and DESTRUCTORS
// -------------------------------------------------------------------
DataPlus::DataPlus() : BApplication(data_plus_sig)
{
	// Make sure we are installed
	BMimeType mime(data_plus_sig);
	if (mime.InitCheck() == B_OK && !mime.IsInstalled()) {
		mime.Install();
	}
	
	// Install data type and icons
	BMimeType dataMime(native_mime_type);
	// dataMime.Delete(); 	//***************
	if (dataMime.InitCheck() == B_OK && !dataMime.IsInstalled()) {
		dataMime.Install();
		// Set the document icons
		status_t status;
		BBitmap* lgIcon = new BBitmap(BRect(0,0,31,31),B_CMAP8);
		lgIcon->SetBits(largeIcon_bits,sizeof(largeIcon_bits),0,B_CMAP8);
		status = dataMime.SetIcon(lgIcon,B_LARGE_ICON);
		delete lgIcon;

		BBitmap* miniIcon = new BBitmap(BRect(0,0,15,15),B_CMAP8);
		miniIcon->SetBits(smallIcon_bits,sizeof(smallIcon_bits),0,B_CMAP8);
		status = dataMime.SetIcon(miniIcon,B_MINI_ICON);
		delete miniIcon;
	}
	// We should get preference data for this ?
	BRect	dataRect;
	
	
	// set up a rectangle and instantiate a new window
	dataRect.Set(100, 100, 450, 450);
	mDataWindow = new DPDataWindow(dataRect);
	mDataWindow->Show();
}

DataPlus::~DataPlus()
{
}
// -------------------------------------------------------------------
//	* PUBLIC METHODS
// ------------------------------------------------------------------ 
void
DataPlus::AboutRequested()
{
	BAlert* theAlert = new BAlert("","DataPlus DataManager Console V1.1.1 Final \n By: Stephen Wardlaw, M.D. swardlaw@connix.com","OK");
	theAlert->Go();
}
// -------------------------------------------------------------------
void
DataPlus::MessageReceived(BMessage* theMesg)
{	
	switch (theMesg->what) {
	
		case FLDS_RESET :
			mDataWindow->MessageReceived(theMesg);
			break;
			
		case mesg_mark :	// A series of data to be marked
			DetachCurrentMessage();
			mDataWindow->MarkData(theMesg);
			break;
			
		default :
			BApplication::MessageReceived(theMesg);
	}
}
// -------------------------------------------------------------------
void
DataPlus::RefsReceived(BMessage* theMesg)
{
	entry_ref theRef;
	int32 refIndx = 0;
	status_t status = B_OK;
	char typeStr[64];
	while(status == B_OK) {
		status = theMesg->FindRef("refs",refIndx++,&theRef);
		if(status == B_OK) {
			BNode theNode(&theRef);
			if(theNode.InitCheck() == B_OK) {
				BNodeInfo theInfo(&theNode);
				if(theInfo.InitCheck() == B_OK && theInfo.GetType(typeStr) == B_OK) {
					// Check MIME type for translator, if required
					BMimeType mType(typeStr);
					if(mType.Type() != NULL) {
						if(::strcmp(mType.Type(),text_mime_type) == 0) {
							mDataWindow->AddData(&theRef);
						} else if(::strcmp(mType.Type(),native_mime_type) == 0) {
							// Open as a native file
							mDataWindow->PostMessage(theMesg);
						}
					}
				}
			}
		}
	} 
}
// -------------------------------------------------------------------
